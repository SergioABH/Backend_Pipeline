name: Backend Render Deploy

on:
  push:
    branches:
      - 'main'
      - 'development'
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - 'development'

  release:
    types: [created]

jobs:
  test-and-deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Extraer versi贸n de la etiqueta o crear versi贸n pre-patch
      id: extract_version
      run: |
        if [[ ${{ github.ref }} == refs/heads/main ]]; then
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION_FULL=$(echo v$VERSION)" >> "$GITHUB_ENV"
        elif [[ ${{ github.ref }} == refs/heads/development ]]; then
          VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION="${VERSION/-/}"
          NEW_VERSION="${NEW_VERSION/+/}"
          NEW_VERSION="$NEW_VERSION-rc.0"
          echo "VERSION_FULL=$NEW_VERSION" >> "$GITHUB_ENV"
        elif [[ ${{ github.event_name }} == 'release' ]]; then
          VERSION=$(node -p "require('./package.json').version")
          COMMIT_SHA=$(expr substr ${{ github.event.release.tag_name }} 2)
          NEW_PRE_PATCH_VERSION="$VERSION-rc.$COMMIT_SHA"
          echo "VERSION_FULL=$NEW_PRE_PATCH_VERSION" >> "$GITHUB_ENV"
        else
          VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION="${VERSION/-/}"
          NEW_VERSION="${NEW_VERSION/+/}"
          NEW_PATCH=$(echo "$NEW_VERSION" | awk -F. '$3++' | awk -F. '{print $1"."$2"."$3}')
          NEW_PRE_PATCH_VERSION="$NEW_VERSION-rc.0"
          if [[ ${{ github.ref }} == refs/heads/* ]]; then
            COMMIT_SHA=$(expr substr ${{ github.ref }} 12)
            NEW_PRE_PATCH_VERSION="$NEW_VERSION-rc.$COMMIT_SHA"
          fi
          echo "VERSION_FULL=$NEW_PRE_PATCH_VERSION" >> "$GITHUB_ENV"
        fi

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-node@v4
      with:
        node-version: 14.21

    - name: Instalar dependencias
      run: npm ci

    - name: Ejecutar pruebas Jest
      run: npm run test

    - name: Actualizar versi贸n en package.json
      run: |
        VERSION_FULL="${{ env.VERSION_FULL }}"
        npm version ${VERSION_FULL#v}

    - name: Modificar etiqueta
      run: |
        VERSION=$(node -p "require('./package.json').version")
        git tag -a "v$VERSION" -m "Creaci贸n de etiqueta para $VERSION"
